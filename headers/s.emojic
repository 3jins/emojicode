🔮 1 0

🌮 The 🔡 class represents a string. [Read more in the language reference.](../../reference/the-s-package.html#-strings) 🌮
🐇 🔡 🍇🍉
🌮
  The 🍨 class represents an ordered mutable collection. [Read more in the
  language reference.](../../reference/the-s-package.html#-lists)
🌮
🐇 🍨🐚Element ⚪️ 🍇🍉
🌮
  A 🚨 instance represents an error. Many methods interacting with the operating
  system will return an error on a failure.
🌮
🐇 🚨 🍇🍉
🌮 📇 is an abstract interface to binary data. 🌮
🐇 📇 🍇🍉
🌮
  🍡 is an class whose subclasses can enumerate other objects. The 🍡 itself is
  never initiated.

  To get the items from an iterator call the 🔽 method on it until it returns
  ✨, which indicates that there are no more items.

  Enumerators conform [🔂](Enumerateable.html) and return themselves in the 🍡
  method.
🌮
🐇 🍡🐚Element ⚪️ 🍇🍉
🌮
  The 🍯 class represents a dictionary. [Read more in the
  language reference.](../../reference/the-s-package.html#-dictionaries)
🌮
🐇 🍯🐚Element ⚪️ 🍇🍉
🐇 🌶 🍇🍉
🐇 🍇 🍇🍉

🌮
  A class whose instances shall be enumerable using the 🔂 loop must
  implement this protocol.

  The class must return an instance of a subclass of [🍡](Enumerator.html)
  which will be used by the 🔂 loop to enumerate the object.
🌮
🐊 🔂 🍇
  🌮
    This method must return an enumerator which can be used to enumerate
    the instance.
  🌮
  🐖 🍡 ➡️ 🍡🐚⚪️
🍉

🐋 🔡 🍇
  🌮 Prompts the user for input. (via the standard input/output) 🌮
  🐈 😯 prompt 🔡 📻

  🌮 Creates a string from the given list of symbols. 🌮
  🐈 🎙 symbolList 🍨🐚🔣 📻

  🌮 Creates a string from the given symbol. 🌮
  🐈 🔣 symbol 🔣 📻

  🌮
    Creates a string by joining all elements into a string sepearted
    by *separator*.
  🌮
  🐈 🍨 list 🍨🐚🔡 separator 🔡 📻

  🌮
    Creates a string representation of the given integer.

    The digits used to represent the integer are
    `0123456789abcdefghijklmnopqrstuvxyz`. Therefore you shouldn't use a base
    greater than 35.
  🌮
  🐈 🚂 integer 🚂 base 🚂 📻

  🌮
    Creates a string from the given 📇 object representing the bytes of a UTF8
    encoded text.

    Nothingness is returned if the given 📇 object does not represent a valid
    UTF8 sequence.
  🌮
  🍬🐈 📇 utf8 📇 📻

  🌮 Puts this 🔡 to the standard output. 🌮
  🐖 😀 📻

  🌮 Returns 👍 if this 🔡 is equal to b. 🌮
  🐖 😛 b 🔡 ➡️ 👌📻

  🌮
    Compares this 🔡 to *b*.

    >!N Note this method compares by the byte value of the 🔣s and is only meant for use with sorting.

  🌮
  🐖 ↔️ b 🔡 ➡️ 🚂 📻

  🌮
    Returns the characters in a string beginning at the specified location
    through the specified number of characters.

    from: Location at which to begin extracting characters. If a negative number
    is given, it is treated as strLength + start where strLength = to the length
    of the string (for example, if start is -3 it is treated as strLength - 3.)
  🌮
  🐖 🔪 from 🚂 length 🚂 ➡️ 🔡 📻

  🌮
    Finds the first occurrences of a string in this string. Search is done from
    left to right.
  🌮
  🐖 🔍 searchValue 🔡 ➡️ 🍬🚂 📻

  🌮 Whether this strings begins with another string. 🌮
  🐖 🎼 testString 🔡 ➡️ 👌 📻

  🌮 Whether this strings ends with another string. 🌮
  🐖 ⛳️ testString 🔡 ➡️ 👌 📻

  🌮
    The 🔧 method returns a new string, on which whitespace has been removed
    from both ends of a string.
  🌮
  🐖 🔧 ➡️ 🔡 📻

  🌮
    This string is split up into substring at each place *seperator* is found.
    *seperator* itself is removed from the string.
  🌮
  🐖 🔫 separator 🔡 ➡️ 🍨🐚🔡 📻

  🌮
    This string is split up into substring at each place *seperator* is found.
    *seperator* itself is removed from the string.

    Prefer this method over `🔫` if the separator is just a single character.
  🌮
  🐖 💣 separator 🔣 ➡️ 🍨🐚🔡 📻

  🌮
    This method returns the number of Unicode code points of this string. This
    is possibly not the number of bytes needed to write the string to a file,
    since Emojicode encodes everything into UTF8.
  🌮
  🐖 📏 ➡️ 🚂 📻

  🌮
    Returns the number of bytes needed to encode this string into proper UTF8.
  🌮
  🐖 📐 ➡️ 🚂 📻
  🌮
    >!N Available from 0.2 Beta 4 which is yet to be released

    This methods tries to construct an integer from this string in the given
    base. It returns the integer or Nothingness if the string does not match the
    regeular expression `[+-]?[0-9a-zA-Z]+` or it does not represent a valid
    value in the given base.
  🌮
  🐖 🚂 base 🚂 ➡️ 🍬🚂 📻
  🌮 Creates a new string by appending *symbol*. 🌮
  🐖 📝 symbol 🔣 ➡️ 🔡 📻

  🌮 Gets a symbol by its index. 🌮
  🐖 🔬 index 🚂 ➡️ 🍬🔣 📻

  🌮 Converts the string to data encoded as UTF8. 🌮
  🐖 📇 ➡️ 📇 📻

  🌮 Returns an array with the symbols from this string. 🌮
  🐖 🎶 ➡️ 🍨🐚🔣 📻

  🌮 Parses the JSON represented by this string. 🌮
  🐖 🗞 ➡️ ⚪️ 📻
🍉

🐋 🍨 🍇
  🌮 Creates an empty list. 🌮
  🐈 🐸 📻
  🌮
    >!N Available from 0.2 Beta 4 which is yet to be released

    Creates an empty list with the given initial capacity.
  🌮
  🐈 🐧 capacity 🚂 📻

  🌮 Returns a shallow copy of this list. 🌮
  🐖 🐮 ➡️ 🍨🐚Element 📻

  🌮 Appends *item* to the end of the list in O(1). 🌮
  🐖 🐻 item Element 📻

  🌮
    Gets the item at *index* in O(1). If the index is invalid ✨ is returned.
  🌮
  🐖 🐽 index 🚂 ➡️ 🍬Element 📻

  🌮
    Removes the item at *index* and shifts all following items to the left in
    O(length - index).

    Returns 👍 unless the index is out of range.
  🌮
  🐖 🐨 index 🚂 ➡️ 👌 📻

  🌮
    Inserts the given values before the element with the given index.

    All items beginning from *index* are shifted to the right and *item* is
    then inserted at *index*. Complexity: O(length - index).
  🌮
  🐖 🐵 index 🚂 item Element 📻

  🌮 Returns the number of items in the list. 🌮
  🐖 🐔 ➡️ 🚂 📻

  🌮
    Removes the last item from the list and returns it in O(1).
    If the list is empty ✨ is returned.
  🌮
  🐖 🐼 ➡️ 🍬Element 📻

  🌮
    >!N Available from 0.2 Beta 4 which is yet to be released

    Sorts this array in place using the quick sort algorithm.

    `comparator` must return an integer less than, equal to, or greater than 0,
    if the first argument is considered respectively less than, equal to, or
    greater than the second.
  🌮
  🐖 🦁 comparator 🍇Element Element➡️🚂🍉 📻

  🌮
    Shuffles the list in place using the Fisher Yates algorithm. The shuffle can
    be considered secure on any BSD or Linux system.
  🌮
  🐖 🐹 📻
  🌮
    >!N Available from 0.2 Beta 4 which is yet to be released

    Calls callback with each element in the list and appends the returned
    value to the end of a new list.
  🌮
  🐖 🐰 🐚A⚪️ callback 🍇Element➡️A🍉 ➡️ 🍨🐚A 🍇
    🍦 g 🔷🍨🐚A🐧 🐔 🐕
    🔂 element 🐕 🍇
      🐻 g 🍭 callback element
    🍉
    🍎 g
  🍉
  🌮
    >!N Available from 0.2 Beta 4 which is yet to be released

    Returns a new array with all elements that pass the test implemented by
    `callback`.
  🌮
  🐖 🐭 callback 🍇Element➡️👌🍉 ➡️ 🍨🐚Element 🍇
    🍦 g 🔷🍨🐚Element🐸
    🔂 element 🐕 🍇
      🍊 🍭 callback element 🍇
        🐻 g element
      🍉
    🍉
    🍎 g
  🍉
  🌮
    >!N Available from 0.2 Beta 4 which is yet to be released

    Tests whether all elements in the array pass the test implemented by
    `callback`.

    The method immdiately returns 👎 if `callback` returned 👎 for one element.
  🌮
  🐖 🐯 callback 🍇Element➡️👌🍉 ➡️ 👌 🍇
    🔂 element 🐕 🍇
      🍊 ❎ 🍭 callback element 🍇
        🍎 👎
      🍉
    🍉
    🍎 👍
  🍉

  🌮
    >!N Available from 0.2 Beta 4 which is yet to be released

    Tests whether this array and `other` are equal. Equality of two elements
    is defined by `callback` which must return true if the first and the second
    argument, which represent elements from this and the other array
    respectively, are equal. `callback` is not necessarily called at all.
  🌮
  🐖 🦄 🐚A⚪️ other 🍨🐚A callback 🍇Element A➡️👌🍉 ➡️ 👌 🍇
    🍊 ❎ 😛 🐔 🐕 🐔 other 🍇
      🍎 👎
    🍉

    🍮 i 0
    🔁 ◀️ i 🐔 other 🍇
      🍊 ❎ 🍭 callback 🍺🐽 🐕 i 🍺 🐽 other i 🍇
        🍎 👎
      🍉
      🍫 i
    🍉
    🍎 👍
  🍉
🍉

🐋 📇 🍇
  🌮 Returns 👍 if this is equal to b. 🌮
  🐖 😛 b 📇 ➡️ 👌 📻
  🌮 Returns the number of bytes represented by this instance. 🌮
  🐖 📏 ➡️ 🚂 📻
  🌮
    >!N Available from 0.2 Beta 4 which is yet to be released

    Returns an integer representing the value of the byte at the given index
    `index`. A negative index is assumed to be relative to the end of the data.

    Nothingness is returned if the index is out of range.
  🌮
  🐖 🐽 index 🚂 ➡️ 🍬🚂 📻
🍉

🐋 🍡 🍇
  🐊 🔂
  🌮
    Returns the next object or ✨ if there are no elements left.

    >!N You should not rely on the return of Nothingness to indicate there are
    >!N no more objects to enumerate. Nothigness could be an ordinary element of
    >!N the enumerated object. Use ❓ instead to determine whether there are
    >!N elements left.

    The default implementation always returns ✨.

    Subclasses of this class are encouraged to declare a more specific return
    type.
  🌮
  🐖 🔽 ➡️ ⚪ 🍇
    🍎 ⚡️
  🍉
  🌮
    Whether the enumerator has more elements to provide.
  🌮
  🐖 ❓ ➡️ 👌 🍇
    🍎 👎
  🍉
  🐖 🍡 ➡️ 🍡🐚Element 🍇
    🍎 🐕
  🍉
🍉

🐋 🚨 🍇
  🌮 Create an error. 🌮
  🐈 😮 message 🔡 code 🚂 📻
  🌮
    Returns the message associated with the error.
    This is maybe an empty string.
  🌮
  🐖 😤 ➡️ 🔡 📻
  🌮 Returns the code associated with the error. 🌮
  🐖 😴 ➡️ 🚂 📻
🍉

🐋 🍯 🍇
  🌮 Creates an empty 🍯. 🌮
  🐈 🐸 📻
  🌮
    Returns the value assigned to *key*. If key is not in the 🍯 ✨ is
    returned.
  🌮
  🐖 🐽 key 🔡 ➡️ 🍬Element 📻
  🌮
    Removes *key* and its assigned value from the 🍯. No action is performed if
    *key* is not in the 🍯.
  🌮
  🐖 🐨 key 🔡 📻

  🌮 Adds a key-value pair. 🌮
  🐖 🐷 key 🔡 object Element 📻

  🌮 Returns a list consisting of all keys in this 🍯. 🌮
  🐖 🐙 ➡️ 🍨🐚🔡 📻

  🌮
    Removes all key-value pairs in this 🍯.
    Returns the number of deleted items (size before clearing).
  🌮
  🐖 🐗 ➡️ 🚂 📻

  🌮 Checks whether *key* is in this 🍯. 🌮
  🐖 🐣 key 🔡 ➡️ 👌📻

  🌮 Returns the number of items. 🌮
  🐖 🐔 ➡️ 🚂📻
🍉

🌮
  💻 provides several class methods that can be used to interact with the
  operating system. It cannot be instantiated.
🌮
🐇 💻 🍇
  🌮
    Gets an environment variable by its name. If the variable cannot be found
    ✨ is returned.
  🌮
  🐇🐖 🌳 variableName 🔡 ➡️ 🍬🔡 📻

  🌮
    Immediately exits the program with the given status code. The code may
    not be larger than 255 on most operating systems.
  🌮
  🐇🐖 🚪 status 🚂 📻

  🌮 Returns the current working directory. 🌮
  🐇🐖 🌍 ➡️ 🔡 📻

  🌮
    Suspends the calling thread from execution for at least the number of
    seconds specified by the arguments *seconds*.
  🌮
  🐇🐖 🕰 seconds 🚂 📻
🍉

🌮
  Represents a range which per definition is an immutable sequence of
  numbers. [Read more in the
  language reference.](../../reference/the-s-package.html#-ranges)

  >!N Available from 0.2 Beta 4 which is yet to be released
🌮
🐇 ⏩ 🍇
  🌮
    Creates an range from start to stop.
  🌮
  🐈 ⏩ start 🚂 stop 🚂 📻
  🌮
    Creates an range from start to stop with the given step.
  🌮
  🐈 ⏭ start 🚂 stop 🚂 step 🚂 📻
  🌮
    Returns the `n`th element of the range. `n` is only valid if
    `start + step * n` is `>= start` and `< stop`. If `n` is invalid
    Nothingness is returned.
  🌮
  🐖 🐽 n 🚂 ➡️ 🍬🚂 📻
🍉

🌮
  🚄 provides mathematical functions as class methods.

  >!N Available from 0.2 Beta 4 which is yet to be released
🌮
🐇 🚄 🍇
  🌮
    Returns a crypthographically secure random number within the given range.
  🌮
  🐇🐖 🎰 max 🚂 min 🚂 ➡️ 🚂 📻
  🌮
    Returns an approximation of 𝜋.
  🌮
  🐇🐖 ⚾️ ➡️ 🚀 🍇
    🍎 3.14159265358979323846264338327950288
  🍉
  🌮
    Returns an approximation of 𝜏 which is equal to 𝜋/2.
  🌮
  🐇🐖 🏉 ➡️ 🚀 🍇
    🍎 1.57079632679489661923132169163975144
  🍉
  🌮
    Returns an approximation of 𝜏/2 which is equal to 𝜋/4.
  🌮
  🐇🐖 🎾 ➡️ 🚀 🍇
    🍎 0.785398163397448309615660845819875721
  🍉
  🌮
    Returns an approximation of ℇ (Euler’s number).
  🌮
  🐇🐖 🏹 ➡️ 🚀 🍇
    🍎 2.71828182845904523536028747135266250
  🍉
  🌮
    Returns the sine of `x`.
  🌮
  🐇🐖 📓 x 🚀 ➡️ 🚀 📻
  🌮
    Returns the cosine of `x`.
  🌮
  🐇🐖 📕 x 🚀 ➡️ 🚀 📻
  🌮
    Returns the tangent of `x`.
  🌮
  🐇🐖 📘 x 🚀 ➡️ 🚀 📻
  🌮
    Returns the arcsine of `x`.
  🌮
  🐇🐖 📔 x 🚀 ➡️ 🚀 📻
  🌮
    Returns the arccosine of `x`.
  🌮
  🐇🐖 📙 x 🚀 ➡️ 🚀 📻
  🌮
    Returns the arctangent of `x`.
  🌮
  🐇🐖 📗 x 🚀 ➡️ 🚀 📻
  🌮
    Returns base to the exponent power, that is, base<sup>exponent</sup>.
  🌮
  🐇🐖 🏂 base 🚀 exponent 🚀 ➡️ 🚀 📻
  🌮
    Returns the positive square root of `x`.
  🌮
  🐇🐖 ⛷ x 🚀 ➡️ 🚀 📻
  🌮
    Returns the smallest integer greater than or equal to `x`.
  🌮
  🐇🐖 🚴 x 🚀 ➡️ 🚂 📻
  🌮
    Returns the largest integer less than or equal to `x`.
  🌮
  🐇🐖 🚵 x 🚀 ➡️ 🚂 📻
  🌮
    Returns the value of `x` rounded to the nearest integer.

    If the fractional portion of number is 0.5 or greater, the argument is
    rounded to the next higher integer. If the fractional portion of number is
    less than 0.5, the argument is rounded to the next lower integer.
  🌮
  🐇🐖 🏇 x 🚀 ➡️ 🚂 📻
  🌮
    Returns the base 2 logarithm of `x`.
  🌮
  🐇🐖 🚣 x 🚀 ➡️ 🚀 📻
🍉
