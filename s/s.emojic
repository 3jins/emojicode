📗
  The s package is Emojicode’s standard library.
📗
🔮 1 0

📗
  Boolean
📗
🌍 🕊 👌 ⚪️ 🍇
  📗 Whether this value and *other* are considered equal. 📗
  🙌 other 👌 ➡️ 👌 🍇
    ↩️ 🐕 🙌 other
  🍉

  📗 Logical and. Returns true if both, the receiver and other, are true. 📗
  🤝 other 👌 ➡️ 👌 🍇
    ↩️ 🐕 🤝 other
  🍉

  📗 Logical or. Returns true if the receiver or other or both are true. 📗
  👐 other 👌 ➡️ 👌 🍇
    ↩️ 🐕 👐 other
  🍉

  📗
    Inverts the boolean. Returns true if the boolean is false, and false if the
    boolean is true.
  📗
  ❗️ ❎ ➡️ 👌 🍇
    ↩️ ❎🐕❗️
  🍉
🍉

📗
  A type conforming to this protocol provides a method 😛 to determine whether
  one of its instance is equal to an instance of type T, where T is normally the
  type itself.
📗
🌍 🐊 😛🐚T⚪️ 🍇
  📗 Whether this value and *other* are equal. 📗
  🙌 other T ➡️ 👌
🍉

🐋 👌 🍇
  🐊 😛🐚👌
🍉

📜 🔤integer.emojic🔤
📜 🔤memory.emojic🔤
📜 🔤double.emojic🔤

📗
  Symbol
📗
🌍 🕊 🔣 ⚪️ 🍇
  🐊 😛🐚🔣

  📗 Whether this value and *other* are considered equal. 📗
  🙌 other 🔣 ➡️ 👌 🍇
    ↩️ 🐕 🙌 other
  🍉
🍉

📗
  The 🔡 class represents a string. [Read more in the language reference.](../../reference/the-s-package.html#-strings)
📗
🌍 🐇 🔡 🍇
  🍰 codePoints 🧠
  🍰 count 🔢
🍉

📗
  The 🍨 class represents an ordered mutable collection. [Read more in the
  language reference.](../../reference/the-s-package.html#-lists)
📗
🌍 🐇 🍨🐚Element ⚪️ 🍇
  🍰 data 🧠
  🍰 count 🔢
  🍰 size 🔢
🍉

📗 📇 is an abstract interface to binary data. 📗
🌍 🐇 📇 🍇🍉
📗
  The 🍯 class represents a dictionary. [Read more in the
  language reference.](../../reference/the-s-package.html#-dictionaries)
📗
🌍 🐇 🍯🐚Element ⚪️ 🍇🍉
🌍 🐇 🍇 🍇🍉

📗
  🍡 can enumerate a collection and generates elements from the object it
  enumerates.

  To get the items from an iterator call the 🔽 method on it, until 🔽❓ returns
  👎 which indicates that there are no more items.
📗
🌍 🐊 🍡🐚Element ⚪️ 🍇
  📗
    Returns the next object. Expect undefined behavior if you call this method
    when ❓ previously returned 👎.
  📗
  ❗️ 🔽 ➡️ Element
  📗
    Whether the enumerator has more elements to provide.
  📗
  ❓ 🔽 ➡️ 👌
🍉

📗
  A type whose instances shall be enumerable using the 🔂 loop must
  implement this protocol.
📗
🌍 🐊 🔂🐚Element⚪️ 🍇
  📗
    This method must return an instance of a class that conforms to
    [[🍡]] which will be used to enumerate this instance.
  📗
  ❗️ 🍡 ➡️ 🍡🐚Element
🍉

📗
  A class whose elements can be accessed by 🐽. The number of elements must
  be finite and returned by 🐔.
📗
🌍 🐊 🐽️🐚Element⚪️ 🍇
  📗
    Gets the item at `index`. If the index is invalid Nothingness is returned.
  📗
  ❗️ 🐽 index 🔢 ➡️ 🍬Element
  📗 Returns the number of items in the list. 📗
  ❗️ 🐔 ➡️ 🔢
🍉

📗
  Iterator over a 🐽. This class is an iterator that can iterate over
  every type that conforms to the 🐽 protocol.
📗
🌍 🐇 🌳🐚Element⚪️ 🍇
  🐊 🍡🐚Element
  🐊 🔂🐚Element

  🍰 iteratee 🐽🐚Element
  🍰 index 🔢

  🆕 🍼 iteratee 🐽🐚Element 🍇
    🍮 index 0
  🍉

  ❗️ 🔽 ➡️ Element 🍇
    🍦 sy 🍺 🐽 iteratee  index❗️
    🍮 index ➕ 1
    ↩️ sy
  🍉

  ❓ 🔽 ➡️ 👌 🍇
    ↩️ index ◀️ 🐔 iteratee❗️
  🍉

  ❗️ 🍡 ➡️ 🍡🐚Element 🍇
    ↩️ 🐕
  🍉
🍉

📜 🔤range.emojic🔤
📜 🔤list_iterator.emojic🔤

🐋 🔢 🍇
  📗
    Creates a string representation of this integer. *base* must be greater than
    or equal to 2 and less than or equal to 35.

    The digits used to represent the integer are
    `0123456789abcdefghijklmnopqrstuvxyz`.
  📗
  ❗️ 🔡 base 🔢 ➡️ 🔡 📻 🔤sIntToString🔤

  📗 Returns the double representation of this integer. 📗
  ❗️ 🚀 ➡️ 🚀 🍇
    ↩️ 🚀 🐕❗️
  🍉
🍉

🐋 🚀 🍇
  📗
    Creates a 🔡 representation of this 🚀 and the given precision – the number
    of digits after the decimal separator “.”.
  📗
  ❗️ 🔡 precision 🔢 ➡️ 🔡 📻 🔤sRealToString🔤
🍉

🐋 🔣 🍇
  📗 Creates a 🔡 from this symbol. 📗
  ❗️ 🔡 ➡️ 🔡 📻 🔤sSymbolToString🔤
  📗 Returns the Unicode code point of this symbol. 📗
  ❗️ 🔢 ➡️ 🔢 📻 🔤sSymbolToInt🔤
🍉

📜 🔤string.emojic🔤
📜 🔤list.emojic🔤

👴 🐋 📇 🍇
👴   🐊 🐽🐚🔢
👴   🐊 🔂🐚🔢
👴   🐊 😛🐚📇

👴   📗 Returns 👍 if this is equal to b. 📗
👴   🙌 b 📇 ➡️ 👌 📻 1
👴   📗 Returns the number of bytes represented by this instance. 📗
👴   ❗️ 🐔 ➡️ 🔢 📻 2
👴   📗
👴     Returns an integer representing the value of the byte at the given index
👴     `index`. A negative index is assumed to be relative to the end of the data.

👴     This method treats the byte at the index as if it was an unsigned value, that is the front most
👴     bit is also counted towards the value and does not indicate the sign. The value is therefore
👴     always positive.

👴     Nothingness is returned if the index is out of range.
👴   📗
👴   ❗️ 🐽 index 🔢 ➡️ 🍬🔢 📻 3
👴   📗
👴     If this object represents the bytes of a UTF8 encoded text this method
👴     returns a string representing that text. Nothingness is returned if this
👴     object does not represent a valid UTF8 sequence.
👴   📗
👴   ❗️ 🔡 ➡️ 🍬🔡 📻 4
👴   📗
👴     Returns a copy of the data within the given range. This method employes
👴     various techniques to make this as efficient as possible.
👴   📗
👴   ❗️ 🔪 from 🔢 length 🔢 ➡️ 📇 📻 5
👴   📗
👴     Finds the first occurrences of *search* in the bytes represented by this
👴     instance. Search is done from left to right. Nothingness is returned if
👴     *search* cannot be found. 0 is returned if *search* is empty.
👴   📗
👴   ❗️ 🔍 search 📇 ➡️ 🍬🔢 📻 6
👴   📗
👴     Creates a new data object by with the bytes of this instance and *b*
👴     concatenated.
👴   📗
👴   ❗️ 📝 b 📇 ➡️ 📇 📻 7

👴   📗 Returns an iterator to iterate over the bytes of this data object. 📗
👴   ❗️ 🍡 ➡️ 🌳🐚🔢 🍇
👴     ↩️ 🆕🌳🐚🔢🆕 🐕❗️
👴   🍉
👴 🍉

👴 🐋 🍯 🍇
👴   📗 Creates an empty 🍯. 📗
👴   🆕 🐸 📻 86
👴   📗
👴     Returns the value assigned to *key*. If key is not in the 🍯 ✨ is
👴     returned.
👴   📗
👴   ❗️ 🐽 key 🔡 ➡️ 🍬Element 📻 87
👴   📗
👴     Removes *key* and its assigned value from the 🍯. No action is performed if
👴     *key* is not in the 🍯.
👴   📗
👴   ❗️ 🐨 key 🔡 📻 88

👴   📗 Adds a key-value pair. 📗
👴   ❗️ 🐷 key 🔡 object Element 📻 89

👴   📗
👴     Returns a list consisting of all keys in this 🍯.

👴     >!N Note that the keys in the returned list are arbitrarily ordered.

👴   📗
👴   ❗️ 🐙 ➡️ 🍨🐚🔡 📻 90

👴   📗
👴     Removes all key-value pairs in this 🍯 and returns the number of deleted
👴     items.
👴   📗
👴   ❗️ 🐗 ➡️ 🔢 📻 91

👴   📗 Checks whether *key* is in this 🍯. 📗
👴   ❗️ 🐣 key 🔡 ➡️ 👌📻 92

👴   📗 Returns the number of items. 📗
👴   ❗️ 🐔 ➡️ 🔢📻 93
👴 🍉

👴 📗
👴   💻 provides several class methods that can be used to interact with the
👴   operating system. It cannot be instantiated.
👴 📗
👴 🌍 🐇 💻 🍇
👴   📗
👴     Returns a list of the arguments passed to the programm. Calling this method
👴     is rather expensive.
👴   📗
👴   🐇❗️ 🎞 ➡️ 🍨🐚🔡 📻 🔤sSystemArgs🔤

👴   📗
👴     Gets an environment variable by its name. If the variable cannot be found
👴     ✨ is returned.
👴   📗
👴   🐇❗️ 🌳 variableName 🔡 ➡️ 🍬🔡 📻 🔤sSystemGetEnv🔤

👴   📗
👴     Immediately exits the program with the given status code. The code may
👴     not be larger than 255 on most operating systems.
👴   📗
👴   🐇❗️ 🚪 status 🔢 📻 🔤sSystemExit🔤

👴   📗
👴     Returns the standard output of running `command` in a subshell.
👴   📗
👴   🐇❗️ 🕴 command 🔡 ➡️ 🍬🔡 📻 🔤sSystemSystem🔤

👴   📗 Returns the current working directory. 📗
👴   🐇❗️ 🌍 ➡️ 🔡 📻 🔤sSystemCwd🔤

👴   📗
👴     Returns the current time in seconds since the Epoch in Greenwich Mean Time.
👴   📗
👴   🐇❗️ 🕰 ➡️ 🔢📻 🔤sSystemUnixTimestamp🔤
👴 🍉

👴 📗
👴   Represents an execution thread of the program.
👴 📗
👴 🌍 🐇 💈 🍇
👴   📗
👴     Creates an new thread and calls the given callable `callable` on the newly
👴     created thread.
👴   📗
👴   🆕 callable 🍇🍉 📻 8
👴   📗
👴     Blocks the calling thread until this thread has finished work.
👴   📗
👴   ❗️ 🛂 📻 11
👴   📗
👴     Suspends the calling thread from execution for at least the number of
👴     microseconds specified by the argument *microseconds*.
👴   📗
👴   🐇❗️ ⏲ microseconds 🔢 📻 10
👴 🍉

👴 📗
👴   🔐 represents a mutex. A mutex is a simple semaphore that can be used to
👴   coordinate access to shared data from multiple concurrent threads.
👴 📗
👴 🌍 🐇 🔐 🍇
👴   📗
👴     Creates an new mutex.
👴   📗
👴   🆕 📻 12
👴   📗
👴     Attempts to lock the mutex and waits until it becomes available if it is
👴     already locked.
👴   📗
👴   ❗️ 🔒 📻 13
👴   📗
👴     Unlocks the mutex.
👴   📗
👴   ❗️ 🔓 📻 14
👴   📗
👴     Attempts to lock the mutex and returns immediately. Returns 👍 if the mutex
👴     could be locked.
👴   📗
👴   ❗️ 🔐 ➡️ 👌 📻 15
👴 🍉

👴 📗
👴   🎰 is a pseudo-random number generator. The default implementation relies on
👴   the Mersenne Twister algorithm.
👴 📗
👴 🌍 🐇 🎰 🍇
👴   📗
👴     Creates a new generator and seeds it with a random value, if possible using
👴     hardware entropy.
👴   📗
👴   🆕 📻 94
👴   📗
👴     Generates an integer. Integers are uniformly distributed on the
👴     closed interval `[a, b]`.
👴   📗
👴   ❗️ 🔢 a 🔢 b 🔢 ➡️ 🔢 📻 95
👴   📗
👴     Generates a double, where doubles are uniformly distributed on the interval
👴     `[0, 1)`.
👴   📗
👴   ❗️ 🚀 ➡️ 🚀 📻 96
👴 🍉
